package io.openmarket.organization.model;


import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.*;

import javax.annotation.Nonnull;
import java.util.Date;
import java.util.Set;

import static io.openmarket.config.OrgConfig.*;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = ORG_DDB_TABLE_NAME)
public class Organization {
    @NonNull
    @DynamoDBHashKey
    @DynamoDBAttribute(attributeName = ORG_DDB_KEY_ORGNAME)
    private String orgName;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_EVENTS)
    private Set<String> eventIDs;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_POSTERS)
    private Set<String> postersID;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_TAGS)
    private Set<String> tags;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_FOLLOWERS)
    private Set<String> followerIDs;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_DESCRIPTION)
    private String orgDescription;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_PORTRAIT_S3KEY)
    private String orgPortraitS3Key;

    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_OWNER_ID)
    private String orgOwnerId;

    @Nonnull
    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_CURRENCY)
    private String orgCurrency;

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    @DynamoDBTypeConvertedTimestamp
    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_LAST_UPDATED_AT)
    private Date lastUpdatedAt;

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    @DynamoDBTypeConvertedTimestamp
    @DynamoDBAttribute(attributeName = ORG_DDB_ATTRIBUTE_CREATED_AT)
    private Date createdAt;
}
