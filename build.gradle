buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'java-library'
    id "idea"
}

group 'io.openmarket'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()

    maven {
        name "DynamoDB Local Release Repository - US West (Oregon) Region"
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }

    maven { url "https://jitpack.io" }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    api 'com.google.dagger:dagger:2.29.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.29.1'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.859')
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb'
    implementation 'com.amazonaws:aws-java-sdk-sqs'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.9.3'

    implementation("com.google.guava:guava:29.0-jre")
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.0-RC1'
    testCompile "org.mockito:mockito-core:2.+"
    // https://mvnrepository.com/artifact/com.amazonaws/DynamoDBLocal
    testCompile group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.13.3'
    testCompile group: 'com.almworks.sqlite4java', name: 'sqlite4java', version: '0.282'

    // https://mvnrepository.com/artifact/org.craftercms.mariaDB4j/mariaDB4j
    compile group: 'org.craftercms.mariaDB4j', name: 'mariaDB4j', version: '2.4.8'

    // jdbc sql
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    runtime "mysql:mysql-connector-java:8.0.15"

    // c3p0
    compile group: 'c3p0', name: 'c3p0', version: '0.9.0.4'

}

// Define the packages that should be excluded from JaCoCo.
// For example, to exclude a package called 'a', add '**/a/**'.
def excludeFromCoverage = ['**/model/*', '**/module/*']

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: excludeFromCoverage)
        })
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'PACKAGE'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }
        }
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: excludeFromCoverage)
        })
    }
}

test {
    useJUnitPlatform()
    jacoco {
        excludes = excludeFromCoverage
    }
    systemProperty("sqlite4java.library.path", "lib")
    systemProperty("log4j.configurationFile", "log4j.xml")
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
